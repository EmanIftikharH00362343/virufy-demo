{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/amil/virufy-demo.github.io/src/containers/SubmitSteps/SubmitSteps.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { createStore, useStateMachine } from 'little-state-machine';\nimport { useHistory } from 'react-router-dom';\nimport Wizard from 'components/Wizard'; // Wizard\n\nconst StoreKey = 'submit-steps';\ncreateStore({\n  [StoreKey]: {\n    recordYourCough: {\n      recordingFile: undefined,\n      uploadedFile: undefined\n    }\n  }\n}, {\n  name: 'VirufyWizard',\n  middleWares: [],\n  storageType: window.localStorage\n});\nconst baseUrl = '/submit-steps';\nconst baseComponentPath = 'SubmitSteps';\nconst middleComponentPathRecording = 'RecordingsSteps';\nconst middleComponentPathSubmission = 'Submission';\nconst recordYourCoughLogic = 'recordYourCough';\nconst steps = [// Record Your Cough Steps\n{\n  path: '/step-record/cough',\n  componentPath: `${baseComponentPath}/${middleComponentPathRecording}/Introduction`,\n  props: {\n    storeKey: StoreKey,\n    previousStep: '/welcome/step-3',\n    nextStep: `${baseUrl}/step-listen/cough`,\n    otherSteps: {\n      manualUploadStep: `${baseUrl}/step-manual-upload/cough`\n    },\n    metadata: {\n      currentLogic: recordYourCoughLogic\n    }\n  }\n}, {\n  path: '/step-manual-upload/cough',\n  componentPath: `${baseComponentPath}/${middleComponentPathRecording}/RecordManualUpload`,\n  props: {\n    storeKey: StoreKey,\n    previousStep: `${baseUrl}/step-record/cough`,\n    nextStep: `${baseUrl}/step-listen/cough`,\n    metadata: {\n      currentLogic: recordYourCoughLogic\n    }\n  }\n}, {\n  path: '/step-listen/cough',\n  componentPath: `${baseComponentPath}/${middleComponentPathRecording}/ListenAudio`,\n  props: {\n    storeKey: StoreKey,\n    previousStep: `${baseUrl}/step-record/cough`,\n    nextStep: `${baseUrl}/prediction-result`,\n    metadata: {\n      currentLogic: recordYourCoughLogic\n    }\n  }\n}, // Submission\n{\n  path: '/prediction-result',\n  componentPath: `${baseComponentPath}/${middleComponentPathSubmission}/PredictionResult`,\n  props: {\n    storeKey: StoreKey,\n    previousStep: `${baseUrl}/step-record/cough`,\n    nextStep: ''\n  }\n}];\n\nconst SubmitSteps = () => {\n  _s();\n\n  // Hooks\n  const {\n    state\n  } = useStateMachine();\n  const history = useHistory(); // Effects\n\n  React.useEffect(() => {\n    const checkFileProblem = file => {\n      if (file && file.size === undefined) {\n        return true;\n      }\n\n      return false;\n    };\n\n    const checkFileConsistencyProblem = inputState => {\n      let out = null;\n\n      if (inputState[StoreKey]) {\n        const {\n          recordYourCough\n        } = inputState[StoreKey];\n        const toTest = [];\n\n        if (recordYourCough) {\n          const {\n            recordingFile,\n            uploadedFile\n          } = recordYourCough;\n\n          if (recordingFile) {\n            toTest.push({\n              file: recordingFile,\n              route: '/step-record/cough'\n            });\n          }\n\n          if (uploadedFile) {\n            toTest.push({\n              file: uploadedFile,\n              route: '/step-manual-upload/cough'\n            });\n          }\n        }\n\n        const itemWithProblem = toTest.find(toTestItem => checkFileProblem(toTestItem.file));\n\n        if (itemWithProblem) {\n          out = itemWithProblem.route;\n        }\n      }\n\n      return out;\n    };\n\n    const problemRoute = checkFileConsistencyProblem(state);\n\n    if (problemRoute) {\n      history.push(`/${StoreKey}${problemRoute}`);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  return null;\n};\n\n_s(SubmitSteps, \"An2pZgVzXvJEduFGlSV3ScPRU48=\", false, function () {\n  return [useStateMachine, useHistory];\n});\n\n_c = SubmitSteps;\n\nconst WrapperSubmitSteps = () => /*#__PURE__*/_jsxDEV(Wizard, {\n  steps: steps,\n  children: /*#__PURE__*/_jsxDEV(SubmitSteps, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 132,\n  columnNumber: 3\n}, this);\n\n_c2 = WrapperSubmitSteps;\nexport default _c3 = /*#__PURE__*/React.memo(WrapperSubmitSteps);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SubmitSteps\");\n$RefreshReg$(_c2, \"WrapperSubmitSteps\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/home/amil/virufy-demo.github.io/src/containers/SubmitSteps/SubmitSteps.tsx"],"names":["React","createStore","useStateMachine","useHistory","Wizard","StoreKey","recordYourCough","recordingFile","undefined","uploadedFile","name","middleWares","storageType","window","localStorage","baseUrl","baseComponentPath","middleComponentPathRecording","middleComponentPathSubmission","recordYourCoughLogic","steps","path","componentPath","props","storeKey","previousStep","nextStep","otherSteps","manualUploadStep","metadata","currentLogic","SubmitSteps","state","history","useEffect","checkFileProblem","file","size","checkFileConsistencyProblem","inputState","out","toTest","push","route","itemWithProblem","find","toTestItem","problemRoute","WrapperSubmitSteps","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStore, useStateMachine } from 'little-state-machine';\nimport { useHistory } from 'react-router-dom';\nimport Wizard from 'components/Wizard';\n\n// Wizard\nconst StoreKey = 'submit-steps';\n\ncreateStore({\n  [StoreKey]: {\n    recordYourCough: {\n      recordingFile: undefined,\n      uploadedFile: undefined,\n    },\n  },\n}, {\n  name: 'VirufyWizard',\n  middleWares: [],\n  storageType: window.localStorage,\n});\n\nconst baseUrl = '/submit-steps';\nconst baseComponentPath = 'SubmitSteps';\nconst middleComponentPathRecording = 'RecordingsSteps';\nconst middleComponentPathSubmission = 'Submission';\nconst recordYourCoughLogic = 'recordYourCough';\n\nconst steps: Wizard.Step[] = [\n  // Record Your Cough Steps\n  {\n    path: '/step-record/cough',\n    componentPath: `${baseComponentPath}/${middleComponentPathRecording}/Introduction`,\n    props: {\n      storeKey: StoreKey,\n      previousStep: '/welcome/step-3',\n      nextStep: `${baseUrl}/step-listen/cough`,\n      otherSteps: {\n        manualUploadStep: `${baseUrl}/step-manual-upload/cough`,\n      },\n      metadata: {\n        currentLogic: recordYourCoughLogic,\n      },\n    },\n  },\n  {\n    path: '/step-manual-upload/cough',\n    componentPath: `${baseComponentPath}/${middleComponentPathRecording}/RecordManualUpload`,\n    props: {\n      storeKey: StoreKey,\n      previousStep: `${baseUrl}/step-record/cough`,\n      nextStep: `${baseUrl}/step-listen/cough`,\n      metadata: {\n        currentLogic: recordYourCoughLogic,\n      },\n    },\n  },\n  {\n    path: '/step-listen/cough',\n    componentPath: `${baseComponentPath}/${middleComponentPathRecording}/ListenAudio`,\n    props: {\n      storeKey: StoreKey,\n      previousStep: `${baseUrl}/step-record/cough`,\n      nextStep: `${baseUrl}/prediction-result`,\n      metadata: {\n        currentLogic: recordYourCoughLogic,\n      },\n    },\n  },\n  // Submission\n  {\n    path: '/prediction-result',\n    componentPath: `${baseComponentPath}/${middleComponentPathSubmission}/PredictionResult`,\n    props: {\n      storeKey: StoreKey,\n      previousStep: `${baseUrl}/step-record/cough`,\n      nextStep: '',\n    },\n  },\n];\n\nconst SubmitSteps = () => {\n  // Hooks\n  const { state } = useStateMachine();\n  const history = useHistory();\n\n  // Effects\n  React.useEffect(() => {\n    const checkFileProblem = (file: File) => {\n      if (file && file.size === undefined) {\n        return true;\n      }\n      return false;\n    };\n\n    const checkFileConsistencyProblem = (inputState: Record<string, any>) => {\n      let out = null;\n\n      if (inputState[StoreKey]) {\n        const { recordYourCough } = inputState[StoreKey];\n        const toTest = [];\n\n        if (recordYourCough) {\n          const { recordingFile, uploadedFile } = recordYourCough;\n          if (recordingFile) {\n            toTest.push({ file: recordingFile, route: '/step-record/cough' });\n          }\n          if (uploadedFile) {\n            toTest.push({ file: uploadedFile, route: '/step-manual-upload/cough' });\n          }\n        }\n\n        const itemWithProblem = toTest.find(toTestItem => checkFileProblem(toTestItem.file));\n        if (itemWithProblem) {\n          out = itemWithProblem.route;\n        }\n      }\n\n      return out;\n    };\n\n    const problemRoute = checkFileConsistencyProblem(state);\n    if (problemRoute) {\n      history.push(`/${StoreKey}${problemRoute}`);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return null;\n};\n\nconst WrapperSubmitSteps = () => (\n  <Wizard\n    steps={steps}\n  >\n    <SubmitSteps />\n  </Wizard>\n);\n\nexport default React.memo(WrapperSubmitSteps);\n"]},"metadata":{},"sourceType":"module"}