{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/arcsec/Documents/Virufy/virufy-demo.github.io/src/components/SetResult/SetResult.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { StyledSelector } from \"./style\"; // result :string in ['low', 'medium', 'high']\n// stored in localStorage (use PredictionResult.tsx)\n\nconst SetResult = () => {\n  _s();\n\n  const [result, setResult] = useState('negative');\n  useEffect(() => {\n    const storedResult = localStorage.getItem('predictionResult');\n\n    if (storedResult && (storedResult === 'negative' || storedResult === 'unknown' || storedResult === 'positive')) {\n      setResult(storedResult);\n    }\n  }, []);\n\n  const handleChange = event => {\n    const selectedValue = event.target.value;\n    setResult(selectedValue);\n    localStorage.setItem('predictionResult', selectedValue);\n    console.log(`Selected result: ${selectedValue}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"result\",\n      children: \"Select Result:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(StyledSelector, {\n      id: \"result\",\n      value: result,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"negative\",\n        children: \"Negative\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"unknown\",\n        children: \"Unknown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"positive\",\n        children: \"Positive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SetResult, \"7Sqorkxc5l7FbaTac5Pepn922ls=\");\n\n_c = SetResult;\nexport default SetResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetResult\");","map":{"version":3,"sources":["/Users/arcsec/Documents/Virufy/virufy-demo.github.io/src/components/SetResult/SetResult.tsx"],"names":["useState","useEffect","StyledSelector","SetResult","result","setResult","storedResult","localStorage","getItem","handleChange","event","selectedValue","target","value","setItem","console","log"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,SAA/B,C,CAEA;AACA;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAS,UAAT,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMK,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAArB;;AACA,QAAIF,YAAY,KACbA,YAAY,KAAK,UAAjB,IACAA,YAAY,KAAK,SADjB,IAEAA,YAAY,KAAK,UAHJ,CAAhB,EAII;AACHD,MAAAA,SAAS,CAACC,YAAD,CAAT;AACA;AACD,GATQ,EASN,EATM,CAAT;;AAWA,QAAMG,YAAY,GAAIC,KAAD,IAAiD;AACrE,UAAMC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAnC;AACAR,IAAAA,SAAS,CAACM,aAAD,CAAT;AACAJ,IAAAA,YAAY,CAACO,OAAb,CAAqB,kBAArB,EAAyCH,aAAzC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBL,aAAc,EAA9C;AACA,GALD;;AAOA,sBACC;AAAA,4BACC;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,cAAD;AAAgB,MAAA,EAAE,EAAC,QAAnB;AAA4B,MAAA,KAAK,EAAEP,MAAnC;AAA2C,MAAA,QAAQ,EAAEK,YAArD;AAAA,8BACC;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAUA,CA/BD;;GAAMN,S;;KAAAA,S;AAiCN,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { StyledSelector } from \"./style\";\n\n// result :string in ['low', 'medium', 'high']\n// stored in localStorage (use PredictionResult.tsx)\nconst SetResult = () => {\n\tconst [result, setResult] = useState<string>('negative');\n\n\tuseEffect(() => {\n\t\tconst storedResult = localStorage.getItem('predictionResult');\n\t\tif (storedResult && \n\t\t\t\t(storedResult === 'negative' || \n\t\t\t\t storedResult === 'unknown' || \n\t\t\t\t storedResult === 'positive')\n\t\t\t ) {\n\t\t\tsetResult(storedResult);\n\t\t}\n\t}, []);\n\n\tconst handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst selectedValue = event.target.value;\n\t\tsetResult(selectedValue);\n\t\tlocalStorage.setItem('predictionResult', selectedValue);\n\t\tconsole.log(`Selected result: ${selectedValue}`);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<label htmlFor=\"result\">Select Result:</label>\n\t\t\t<StyledSelector id=\"result\" value={result} onChange={handleChange}>\n\t\t\t\t<option value=\"negative\">Negative</option>\n\t\t\t\t<option value=\"unknown\">Unknown</option>\n\t\t\t\t<option value=\"positive\">Positive</option>\n\t\t\t</StyledSelector>\n\t\t</div>\n\t);\n}\n\nexport default SetResult;\n"]},"metadata":{},"sourceType":"module"}