{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/arcsec/Documents/Virufy/virufy-demo.github.io/src/containers/Welcome/Step1/Step1.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next'; // Form\n\nimport { useForm, Controller } from 'react-hook-form';\nimport { useStateMachine } from 'little-state-machine';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup'; // Components\n\nimport Dropdown from 'components/Dropdown';\nimport CreatedBy from 'components/CreatedBy'; // Update Action\n\nimport { updateAction } from 'utils/wizard'; // Header Control\n\nimport useHeaderContext from 'hooks/useHeaderContext'; // Data\n\nimport { languageData } from 'data/lang'; // Hooks\n\nimport useWindowSize from 'hooks/useWindowSize'; // Utils\n\nimport { scrollToTop } from 'helper/scrollHelper'; // Styles\n\nimport { WelcomeContent, WelcomeSubtitleBold, WelcomeStyledForm, ContainerNextButton, NextButton, ArrowRightSVG } from '../style';\nconst schema = Yup.object().shape({\n  language: Yup.string().required()\n}).defined();\n\nconst Step1 = p => {\n  _s();\n\n  const {\n    doGoBack,\n    setDoGoBack,\n    setLogoSize,\n    setType\n  } = useHeaderContext(); // Hooks\n\n  const history = useHistory();\n  const {\n    width\n  } = useWindowSize();\n  const {\n    t,\n    i18n\n  } = useTranslation(); // States\n\n  const [activeStep, setActiveStep] = React.useState(true);\n  const {\n    state,\n    actions\n  } = useStateMachine({\n    updateAction: updateAction(p.storeKey)\n  }); // Hook Form\n\n  const {\n    control,\n    formState,\n    handleSubmit,\n    watch,\n    reset // setValue,\n\n  } = useForm({\n    defaultValues: state === null || state === void 0 ? void 0 : state[p.storeKey],\n    resolver: yupResolver(schema),\n    mode: 'onChange'\n  });\n  const {\n    isValid\n  } = formState; // Effects\n\n  React.useEffect(() => {\n    // NOTE: repopulate default values\n    if (state && state[p.storeKey]) {\n      reset(state[p.storeKey]);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []); // Handlers\n\n  const onSubmit = async values => {\n    if (values) {\n      actions.updateAction(values);\n\n      if (p.nextStep) {\n        setActiveStep(false);\n        history.push(p.nextStep);\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    scrollToTop(); // Hide back arrow in header if neccesary\n\n    if (doGoBack) setDoGoBack(null);\n    setType('noShape');\n    setLogoSize('big'); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const lang = watch('language'); // const country = watch('country');\n\n  React.useEffect(() => {\n    i18n.changeLanguage(lang);\n  }, [i18n, lang]);\n\n  if (!width) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(WelcomeStyledForm, {\n    children: /*#__PURE__*/_jsxDEV(WelcomeContent, {\n      mt: 53,\n      children: [/*#__PURE__*/_jsxDEV(WelcomeSubtitleBold, {\n        mt: width && width > 560 ? 50 : 40,\n        mb: 16,\n        textAlign: \"left\",\n        isBold: true,\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: t('main:selectYourLanguage', 'Language')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: \"language\",\n        defaultValue: i18n.language.split('-')[0] || languageData[0].code,\n        render: ({\n          onChange,\n          value\n        }) => /*#__PURE__*/_jsxDEV(Dropdown, {\n          onChange: e => onChange(e.currentTarget.value),\n          value: value,\n          children: languageData.map(({\n            code,\n            label\n          }) => /*#__PURE__*/_jsxDEV(\"option\", {\n            id: code,\n            value: code,\n            children: label\n          }, code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), activeStep && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ContainerNextButton, {\n          children: /*#__PURE__*/_jsxDEV(NextButton, {\n            onClick: handleSubmit(onSubmit),\n            isDisable: !isValid,\n            children: /*#__PURE__*/_jsxDEV(ArrowRightSVG, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CreatedBy, {\n          inline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Step1, \"VeEkSZSvkcuyCbmgxZzd5iQe/Ro=\", false, function () {\n  return [useHeaderContext, useHistory, useWindowSize, useTranslation, useStateMachine, useForm];\n});\n\n_c = Step1;\nexport default _c2 = /*#__PURE__*/React.memo(Step1);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Step1\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/arcsec/Documents/Virufy/virufy-demo.github.io/src/containers/Welcome/Step1/Step1.tsx"],"names":["React","useHistory","useTranslation","useForm","Controller","useStateMachine","yupResolver","Yup","Dropdown","CreatedBy","updateAction","useHeaderContext","languageData","useWindowSize","scrollToTop","WelcomeContent","WelcomeSubtitleBold","WelcomeStyledForm","ContainerNextButton","NextButton","ArrowRightSVG","schema","object","shape","language","string","required","defined","Step1","p","doGoBack","setDoGoBack","setLogoSize","setType","history","width","t","i18n","activeStep","setActiveStep","useState","state","actions","storeKey","control","formState","handleSubmit","watch","reset","defaultValues","resolver","mode","isValid","useEffect","onSubmit","values","nextStep","push","lang","changeLanguage","split","code","onChange","value","e","currentTarget","map","label","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\n// Form\nimport { useForm, Controller } from 'react-hook-form';\nimport { useStateMachine } from 'little-state-machine';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\n\n// Components\nimport Dropdown from 'components/Dropdown';\nimport CreatedBy from 'components/CreatedBy';\n\n// Update Action\nimport { updateAction } from 'utils/wizard';\n\n// Header Control\nimport useHeaderContext from 'hooks/useHeaderContext';\n\n// Data\nimport { languageData } from 'data/lang';\n\n// Hooks\nimport useWindowSize from 'hooks/useWindowSize';\n\n// Utils\nimport { scrollToTop } from 'helper/scrollHelper';\n\n// Styles\nimport {\n  WelcomeContent,\n  WelcomeSubtitleBold,\n  WelcomeStyledForm,\n  ContainerNextButton,\n  NextButton,\n  ArrowRightSVG,\n} from '../style';\n\nconst schema = Yup.object().shape({\n  language: Yup.string().required(),\n}).defined();\n\ntype Step1Type = Yup.InferType<typeof schema>;\n\nconst Step1 = (p: Wizard.StepProps) => {\n  const {\n    doGoBack, setDoGoBack, setLogoSize, setType,\n  } = useHeaderContext();\n  // Hooks\n  const history = useHistory();\n  const { width } = useWindowSize();\n  const { t, i18n } = useTranslation();\n\n  // States\n  const [activeStep, setActiveStep] = React.useState(true);\n  const {\n    state,\n    actions,\n  } = useStateMachine({ updateAction: updateAction(p.storeKey) });\n\n  // Hook Form\n  const {\n    control,\n    formState,\n    handleSubmit,\n    watch,\n    reset,\n    // setValue,\n  } = useForm({\n    defaultValues: state?.[p.storeKey],\n    resolver: yupResolver(schema),\n    mode: 'onChange',\n  });\n  const { isValid } = formState;\n\n  // Effects\n  React.useEffect(() => {\n    // NOTE: repopulate default values\n    if (state && state[p.storeKey]) {\n      reset(state[p.storeKey]);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Handlers\n  const onSubmit = async (values: Step1Type) => {\n    if (values) {\n      actions.updateAction(values);\n      if (p.nextStep) {\n        setActiveStep(false);\n        history.push(p.nextStep);\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    scrollToTop();\n    // Hide back arrow in header if neccesary\n    if (doGoBack) setDoGoBack(null);\n\n    setType('noShape');\n    setLogoSize('big');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const lang = watch('language');\n  // const country = watch('country');\n\n  React.useEffect(() => {\n    i18n.changeLanguage(lang);\n  }, [i18n, lang]);\n\n  if (!width) {\n    return null;\n  }\n\n  return (\n    <WelcomeStyledForm>\n      {/* Content */}\n      <WelcomeContent mt={53}>\n        <WelcomeSubtitleBold\n          mt={width && width > 560 ? 50 : 40}\n          mb={16}\n          textAlign=\"left\"\n          isBold\n        >\n          <strong>{t('main:selectYourLanguage', 'Language')}</strong>\n        </WelcomeSubtitleBold>\n\n        {/* Language */}\n        <Controller\n          control={control}\n          name=\"language\"\n          defaultValue={i18n.language.split('-')[0] || languageData[0].code}\n          render={({ onChange, value }) => (\n            <Dropdown\n              onChange={e => onChange(e.currentTarget.value)}\n              value={value}\n            >\n              {\n                languageData.map(({ code, label }) => (\n                  <option\n                    key={code}\n                    id={code}\n                    value={code}\n                  >\n                    {label}\n                  </option>\n                ))\n              }\n            </Dropdown>\n          )}\n        />\n\n        {\n          activeStep && (\n            <>\n              <ContainerNextButton>\n                <NextButton\n                  onClick={handleSubmit(onSubmit)}\n                  isDisable={!isValid}\n                >\n                  <ArrowRightSVG />\n                </NextButton>\n              </ContainerNextButton>\n              <CreatedBy inline />\n            </>\n          )\n        }\n      </WelcomeContent>\n    </WelcomeStyledForm>\n  );\n};\n\nexport default React.memo(Step1);\n"]},"metadata":{},"sourceType":"module"}