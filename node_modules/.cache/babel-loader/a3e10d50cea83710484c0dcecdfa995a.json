{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/arcsec/Documents/Virufy/virufy-demo.github.io/src/components/Wizard/Wizard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport loadable from '@loadable/component';\nimport SlideRoutes from 'react-slide-routes';\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { StateMachineProvider } from 'little-state-machine'; // Components\n\nimport Layout from 'components/Layout/'; // Style\n\nimport { WizardContainer, StepContainer, WizardNavControlPortal } from './style';\nconst AsyncLoad = loadable(_c = ({\n  container\n}) => import(`containers/${container}`), {\n  fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this),\n  cacheKey: ({\n    container\n  }) => container\n});\n_c2 = AsyncLoad;\n\nfunction clearPath(path) {\n  return path.replace(/\\/$/, '');\n}\n\nconst Wizard = ({\n  steps,\n  children\n}) => {\n  _s();\n\n  const match = useRouteMatch();\n  const location = useLocation();\n  const [loadSteps, setLoadSteps] = React.useState(false);\n  const pathList = React.useMemo(() => {\n    const base = clearPath(match.url);\n    return steps.map(step => base + step.path);\n  }, [match.url, steps]);\n  React.useEffect(() => {\n    setLoadSteps(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StateMachineProvider, {\n    children: /*#__PURE__*/_jsxDEV(WizardContainer, {\n      children: [/*#__PURE__*/_jsxDEV(StepContainer, {\n        children: [loadSteps && /*#__PURE__*/_jsxDEV(SlideRoutes, {\n          location: location,\n          timing: \"ease-in-out\",\n          duration: 500,\n          pathList: pathList,\n          children: steps.map(step => /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: Array.isArray(step.path) ? step.path.map(s => match.path + s) : match.path + step.path,\n            render: () => /*#__PURE__*/_jsxDEV(Layout, {\n              children: /*#__PURE__*/_jsxDEV(AsyncLoad, {\n                container: step.componentPath,\n                ...step.props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this)\n          }, step.componentPath, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), \"aaaaaaaa\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \"ppppppp\", /*#__PURE__*/_jsxDEV(WizardNavControlPortal, {\n        id: \"wizard-buttons\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Wizard, \"dqdcd0OhXWjX5BL4jO4IXP1gBQQ=\", false, function () {\n  return [useRouteMatch, useLocation];\n});\n\n_c3 = Wizard;\nexport default _c4 = /*#__PURE__*/React.memo(Wizard);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"AsyncLoad$loadable\");\n$RefreshReg$(_c2, \"AsyncLoad\");\n$RefreshReg$(_c3, \"Wizard\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["/Users/arcsec/Documents/Virufy/virufy-demo.github.io/src/components/Wizard/Wizard.tsx"],"names":["React","loadable","SlideRoutes","Route","useRouteMatch","useLocation","StateMachineProvider","Layout","WizardContainer","StepContainer","WizardNavControlPortal","AsyncLoad","container","fallback","cacheKey","clearPath","path","replace","Wizard","steps","children","match","location","loadSteps","setLoadSteps","useState","pathList","useMemo","base","url","map","step","useEffect","Array","isArray","s","componentPath","props","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport loadable from '@loadable/component';\nimport SlideRoutes from 'react-slide-routes';\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { StateMachineProvider } from 'little-state-machine';\n\n// Components\nimport Layout from 'components/Layout/';\n\n// Style\nimport {\n  WizardContainer,\n  StepContainer,\n  WizardNavControlPortal,\n} from './style';\n\ninterface WizardProps {\n  steps: Wizard.Step[];\n}\n\ninterface AsyncLoadProps extends Partial<Wizard.StepProps> {\n  container: string;\n}\n\nconst AsyncLoad = loadable(({ container }: AsyncLoadProps) => import(`containers/${container}`), {\n  fallback: <div>Loading ...</div>,\n  cacheKey: ({ container }: AsyncLoadProps) => container,\n});\n\nfunction clearPath(path: string) {\n  return path.replace(/\\/$/, '');\n}\n\nconst Wizard = ({ steps, children }: React.PropsWithChildren<WizardProps>) => {\n  const match = useRouteMatch();\n  const location = useLocation();\n  const [loadSteps, setLoadSteps] = React.useState(false);\n\n  const pathList = React.useMemo(() => {\n    const base = clearPath(match.url);\n    return steps.map(step => base + step.path);\n  }, [match.url, steps]);\n\n  React.useEffect(() => {\n    setLoadSteps(true);\n  }, []);\n\n  return (\n    <StateMachineProvider>\n      <WizardContainer>\n        <StepContainer>\n          {\n            loadSteps && (\n              <SlideRoutes\n                location={location}\n                timing=\"ease-in-out\"\n                duration={500}\n                pathList={pathList}\n              >\n                {\n                  steps.map(step => (\n                    <Route\n                      key={step.componentPath}\n                      exact\n                      path={Array.isArray(step.path)\n                        ? step.path.map(s => (match.path + s))\n                        : match.path + step.path}\n                      render={() => (\n                        <Layout>\n                          <AsyncLoad\n                            container={step.componentPath}\n                            {...step.props}\n                          />\n                        </Layout>\n\n                      )}\n                    />\n                  ))\n                }\n              </SlideRoutes>\n            )\n          }\n\t\t\t\t\taaaaaaaa\n        </StepContainer>\n\t\t\t\tppppppp\n        <WizardNavControlPortal\n          id=\"wizard-buttons\"\n        >\n          {children}\n        </WizardNavControlPortal>\n      </WizardContainer>\n    </StateMachineProvider>\n  );\n};\n\nexport default React.memo(Wizard);\n"]},"metadata":{},"sourceType":"module"}