{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/arcsec/virufy-demo.github.io/src/modals/RecordErrorModal/RecordErrorModal.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport Modal from 'react-modal';\nimport { useTranslation } from 'react-i18next';\nimport Button from 'components/Button'; // Style\n\nimport { ModalBody, ModalTitle, ModalContent } from './style';\nModal.setAppElement('#root');\nconst RecordErrorModal = /*#__PURE__*/React.memo(_c = _s(({\n  modalTitle,\n  children,\n  onConfirm,\n  ...props\n}) => {\n  _s();\n\n  // Handlers\n  const {\n    t\n  } = useTranslation();\n  const customStyles = {\n    content: {\n      height: '281px',\n      maxWidth: '348px',\n      margin: 'auto',\n      borderRadius: '10px',\n      border: 'none'\n    },\n    overlay: {\n      backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    style: customStyles,\n    children: /*#__PURE__*/_jsxDEV(ModalBody, {\n      className: \"ModalBody\",\n      children: [/*#__PURE__*/_jsxDEV(ModalTitle, {\n        children: modalTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onConfirm,\n        dark: true,\n        children: t('recordingsIntroduction:retryButton', 'Retry')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n}));\n_c2 = RecordErrorModal;\nexport default RecordErrorModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RecordErrorModal$React.memo\");\n$RefreshReg$(_c2, \"RecordErrorModal\");","map":{"version":3,"sources":["/Users/arcsec/virufy-demo.github.io/src/modals/RecordErrorModal/RecordErrorModal.tsx"],"names":["React","Modal","useTranslation","Button","ModalBody","ModalTitle","ModalContent","setAppElement","RecordErrorModal","memo","modalTitle","children","onConfirm","props","t","customStyles","content","height","maxWidth","margin","borderRadius","border","overlay","backgroundColor"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,MAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,SACEC,SADF,EACaC,UADb,EACyBC,YADzB,QAEO,SAFP;AAUAL,KAAK,CAACM,aAAN,CAAoB,OAApB;AAEA,MAAMC,gBAAgB,gBAAGR,KAAK,CAACS,IAAN,SAAW,CAAC;AACnCC,EAAAA,UADmC;AAEnCC,EAAAA,QAFmC;AAGnCC,EAAAA,SAHmC;AAInC,KAAGC;AAJgC,CAAD,KAKa;AAAA;;AAC/C;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAQZ,cAAc,EAA5B;AAEA,QAAMa,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,OADD;AAEPC,MAAAA,QAAQ,EAAE,OAFH;AAGPC,MAAAA,MAAM,EAAE,MAHD;AAIPC,MAAAA,YAAY,EAAE,MAJP;AAKPC,MAAAA,MAAM,EAAE;AALD,KADU;AAQnBC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB;AARU,GAArB;AAWA,sBACE,QAAC,KAAD,OACMV,KADN;AAEE,IAAA,KAAK,EAAEE,YAFT;AAAA,2BAIE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAA,8BACE,QAAC,UAAD;AAAA,kBAAaL;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAA,kBAAeC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEC,SAAjB;AAA4B,QAAA,IAAI,MAAhC;AAAA,kBACGE,CAAC,CAAC,oCAAD,EAAuC,OAAvC;AADJ;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAnCwB;AAAA,UAQTZ,cARS;AAAA,GAAzB;MAAMM,gB;AAqCN,eAAeA,gBAAf","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React, { PropsWithChildren } from 'react';\nimport Modal from 'react-modal';\nimport { useTranslation } from 'react-i18next';\nimport Button from 'components/Button';\n\n// Style\nimport {\n  ModalBody, ModalTitle, ModalContent,\n} from './style';\n\nexport interface ConfirmationModalProps {\n  isOpen: boolean;\n  modalTitle: string;\n  onConfirm?: () => void;\n}\n\nModal.setAppElement('#root');\n\nconst RecordErrorModal = React.memo(({\n  modalTitle,\n  children,\n  onConfirm,\n  ...props\n}: PropsWithChildren<ConfirmationModalProps>) => {\n  // Handlers\n\n  const { t } = useTranslation();\n\n  const customStyles = {\n    content: {\n      height: '281px',\n      maxWidth: '348px',\n      margin: 'auto',\n      borderRadius: '10px',\n      border: 'none',\n    },\n    overlay: { backgroundColor: 'rgba(0, 0, 0, 0.5)' },\n  };\n\n  return (\n    <Modal\n      {...props}\n      style={customStyles}\n    >\n      <ModalBody className=\"ModalBody\">\n        <ModalTitle>{modalTitle}</ModalTitle>\n        <ModalContent>{children}</ModalContent>\n        <Button onClick={onConfirm} dark>\n          {t('recordingsIntroduction:retryButton', 'Retry')}\n        </Button>\n      </ModalBody>\n    </Modal>\n  );\n});\n\nexport default RecordErrorModal;\n"]},"metadata":{},"sourceType":"module"}