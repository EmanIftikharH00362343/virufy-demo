{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/arcsec/virufy-demo.github.io/src/containers/SubmitSteps/Submission/PredictionResult/PredictionResult.tsx\",\n    _s = $RefreshSig$();\n\n// Showing positive egardless of what user submits //\nimport React from 'react';\nimport { useTranslation, Trans } from 'react-i18next';\nimport usePortal from 'react-useportal'; // import axios from 'axios';\n\nimport { useHistory } from 'react-router-dom'; // Header Control\n\nimport useHeaderContext from 'hooks/useHeaderContext'; // Utils\n\nimport { scrollToTop } from 'helper/scrollHelper'; // Styles\n\nimport WizardButtons from 'components/WizardButtons';\nimport { Title, ImageProcessing, ProcessingContainer, PredictionResultContainer, TitleResult, ImagePredictionResult, IntroText, StyledLow, StyledHigh, SubmitError } from './style';\n\nconst PredictionResult = () => {\n  _s();\n\n  // Hooks\n  const {\n    setDoGoBack,\n    setTitle,\n    setSubtitle,\n    setType\n  } = useHeaderContext();\n  const {\n    t\n  } = useTranslation();\n  const {\n    Portal\n  } = usePortal({\n    bindTo: document && document.getElementById('wizard-buttons')\n  });\n  const history = useHistory(); // States\n\n  const errorCode = null;\n  const [processing, setProcessing] = React.useState(true);\n  const [prediction, setPrediction] = React.useState('unknown');\n  const submitError = null;\n  React.useEffect(() => {\n    // Hide the Footer Report Problems while processing\n    const target = document && document.getElementById('footer-report-problems');\n\n    if (target) {\n      if (processing) {\n        target.style.display = 'none';\n      } else {\n        target.style.display = 'flex';\n      }\n    }\n  }, [processing]); // Handlers\n\n  const handleSubmit = async () => {\n    setPrediction('negative');\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    setProcessing(false);\n  };\n\n  const handleReturnMain = React.useCallback(() => {\n    history.replace('/welcome');\n  }, [history]); // Effects\n\n  React.useEffect(() => {\n    scrollToTop();\n    setTitle('');\n    setDoGoBack(() => {});\n    setType('noShape');\n    handleSubmit(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(() => {\n    if (processing) {\n      setSubtitle('');\n    } else {\n      setSubtitle(`${t('predictionResult:result')}`);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [processing]); // Always positive result hardcoded\n\n  console.log('errorCode', errorCode);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [processing ? /*#__PURE__*/_jsxDEV(ProcessingContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: t('predictionResult:processingTitle')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImageProcessing, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: errorCode === 'invalid_access_code' ? /*#__PURE__*/_jsxDEV(PredictionResultContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: t('predictionResult:result')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(TitleResult, {\n          color: \"#FF4444\",\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            i18nKey: \"predictionResult:resultDetectedDummy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(StyledHigh, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(IntroText, {\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            i18nKey: \"predictionResult:resultDetectedText\",\n            children: \"Your voice has indicators of COVID-19. Please contact your healthcare professional and take additional precautions.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(ImagePredictionResult, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(PredictionResultContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            children: t('predictionResult:result')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this), prediction === 'negative' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TitleResult, {\n              color: \"#4FDB76\",\n              children: t('predictionResult:resultNotDetected')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(StyledLow, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(IntroText, {\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                i18nKey: \"predictionResult:resultNotDetectedText\",\n                children: [\"Your voice does not seem to have indicators of COVID-19. Please \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"continue to take appropriate measures\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 93\n                }, this), \" based on the advice of your healthcare professional or applicable regulatory body and reassess yourself in our app daily.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true), prediction === 'unknown' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TitleResult, {\n              children: t('predictionResult:resultNotAnalyze')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(IntroText, {\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                i18nKey: \"predictionResult:resultNotAnalyzeText\",\n                children: [\"Our algorithm is not able to determine your COVID-19 status.\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Please submit another cough\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 29\n                }, this), \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true), prediction === 'positive' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(StyledHigh, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TitleResult, {\n              color: \"#FF4444\",\n              children: t('predictionResult:resultDetected')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(IntroText, {\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                i18nKey: \"predictionResult:resultDetectedText\",\n                children: \"Your voice has indicators of COVID-19. Please contact your healthcare professional and take additional precautions.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }, this)\n      }, void 0, false)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(Portal, {\n      children: [!processing && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(IntroText, {\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            i18nKey: \"predictionResult:resultModalDummy\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Aviso importante:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this), \" Esta aplicaci\\xF3n no predecir\\xE1 su estado de COVID-19 ni diagnosticar\\xE1 ninguna enfermedad, trastorno u otra condici\\xF3n de salud. Virufy est\\xE1 llevando a cabo una investigaci\\xF3n y utilizar\\xE1 la informaci\\xF3n que proporciones \\xFAnicamente para dicha investigaci\\xF3n. Virufy no sustituir\\xE1 a un m\\xE9dico y le recuerda que es su responsabilidad buscar consejo m\\xE9dico de su m\\xE9dico.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(WizardButtons, {\n          invert: true,\n          leftLabel: t('predictionResult:nextButton'),\n          leftHandler: handleReturnMain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), submitError && /*#__PURE__*/_jsxDEV(SubmitError, {\n        children: `${submitError}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PredictionResult, \"rZJM/yeoaY47P/6Y3nPYQWgtSm8=\", false, function () {\n  return [useHeaderContext, useTranslation, usePortal, useHistory];\n});\n\n_c = PredictionResult;\nexport default _c2 = /*#__PURE__*/React.memo(PredictionResult);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PredictionResult\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/arcsec/virufy-demo.github.io/src/containers/SubmitSteps/Submission/PredictionResult/PredictionResult.tsx"],"names":["React","useTranslation","Trans","usePortal","useHistory","useHeaderContext","scrollToTop","WizardButtons","Title","ImageProcessing","ProcessingContainer","PredictionResultContainer","TitleResult","ImagePredictionResult","IntroText","StyledLow","StyledHigh","SubmitError","PredictionResult","setDoGoBack","setTitle","setSubtitle","setType","t","Portal","bindTo","document","getElementById","history","errorCode","processing","setProcessing","useState","prediction","setPrediction","submitError","useEffect","target","style","display","handleSubmit","Promise","resolve","setTimeout","handleReturnMain","useCallback","replace","console","log","memo"],"mappings":"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","sourcesContent":["// Showing positive egardless of what user submits //\n\nimport React from 'react';\nimport { useTranslation, Trans } from 'react-i18next';\nimport usePortal from 'react-useportal';\n// import axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\n// Header Control\nimport useHeaderContext from 'hooks/useHeaderContext';\n\n// Utils\nimport { scrollToTop } from 'helper/scrollHelper';\n\n// Styles\nimport WizardButtons from 'components/WizardButtons';\nimport {\n  Title,\n  ImageProcessing,\n  ProcessingContainer,\n  PredictionResultContainer,\n  TitleResult,\n  ImagePredictionResult,\n  IntroText,\n  StyledLow,\n  StyledHigh,\n  SubmitError,\n} from './style';\n\nconst PredictionResult = () => {\n  // Hooks\n  const {\n    setDoGoBack, setTitle, setSubtitle, setType,\n  } = useHeaderContext();\n  const { t } = useTranslation();\n  const { Portal } = usePortal({\n    bindTo: document && document.getElementById('wizard-buttons') as HTMLDivElement,\n  });\n  const history = useHistory();\n\n  // States\n  const errorCode = null;\n  const [processing, setProcessing] = React.useState<boolean>(true);\n  const [prediction, setPrediction] = React.useState<string>('unknown');\n  const submitError = null;\n\n  React.useEffect(() => {\n    // Hide the Footer Report Problems while processing\n    const target = document && document.getElementById('footer-report-problems');\n    if (target) {\n      if (processing) {\n        target.style.display = 'none';\n      } else {\n        target.style.display = 'flex';\n      }\n    }\n  }, [processing]);\n\n  // Handlers\n  const handleSubmit = async () => {\n    setPrediction('negative');\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    setProcessing(false);\n  };\n\n  const handleReturnMain = React.useCallback(() => {\n    history.replace('/welcome');\n  }, [history]);\n\n  // Effects\n  React.useEffect(() => {\n    scrollToTop();\n    setTitle('');\n    setDoGoBack(() => {});\n    setType('noShape');\n    handleSubmit();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    if (processing) {\n      setSubtitle('');\n    } else {\n      setSubtitle(`${t('predictionResult:result')}`);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [processing]);\n\n  // Always positive result hardcoded\n  console.log('errorCode', errorCode);\n\n  return (\n    <>\n      {\n        processing ? (\n          <ProcessingContainer>\n            {/* Title */}\n            <Title>\n              {t('predictionResult:processingTitle')}\n            </Title>\n\n            {/* Image */}\n            <ImageProcessing />\n          </ProcessingContainer>\n        ) : (\n          <>\n            {\n            (errorCode === 'invalid_access_code')\n              ? (\n                <PredictionResultContainer>\n                  <Title>\n                    {t('predictionResult:result')}\n                  </Title>\n                  <TitleResult color=\"#FF4444\">\n                    <Trans i18nKey=\"predictionResult:resultDetectedDummy\" />\n                  </TitleResult>\n                  <StyledHigh />\n                  <IntroText>\n                    <Trans i18nKey=\"predictionResult:resultDetectedText\">\n                      {/* eslint-disable-next-line max-len */}\n                      Your voice has indicators of COVID-19. Please contact your\n                      healthcare professional and take additional precautions.\n                    </Trans>\n                  </IntroText>\n                  <ImagePredictionResult />\n                </PredictionResultContainer>\n              ) : (\n                <>\n                  <PredictionResultContainer>\n                    <Title>\n                      {t('predictionResult:result')}\n                    </Title>\n                    {/* Title, text and image conditional based on range result */}\n                    {prediction === 'negative' && (\n                      <>\n                        <TitleResult color=\"#4FDB76\">{t('predictionResult:resultNotDetected')}</TitleResult>\n                        <StyledLow />\n                        <IntroText>\n                          <Trans i18nKey=\"predictionResult:resultNotDetectedText\">\n                            {/* eslint-disable-next-line max-len */}\n                            Your voice does not seem to have indicators of COVID-19. Please <strong>continue to take appropriate measures</strong> based on the advice of your healthcare professional or applicable regulatory body and reassess yourself in our app daily.\n                          </Trans>\n                        </IntroText>\n                      </>\n                    )}\n                    {prediction === 'unknown' && (\n                      <>\n                        <TitleResult>{t('predictionResult:resultNotAnalyze')}</TitleResult>\n                        <IntroText>\n                          <Trans i18nKey=\"predictionResult:resultNotAnalyzeText\">\n                            Our algorithm is not able to determine your COVID-19 status.\n                            <strong>Please submit another cough</strong>.\n                          </Trans>\n                        </IntroText>\n                      </>\n                    )}\n                    {prediction === 'positive' && (\n                      <>\n                        <StyledHigh />\n                        <TitleResult color=\"#FF4444\">{t('predictionResult:resultDetected')}</TitleResult>\n                        <IntroText>\n                          <Trans i18nKey=\"predictionResult:resultDetectedText\">\n                            Your voice has indicators of COVID-19. Please contact your\n                            healthcare professional and take additional precautions.\n                          </Trans>\n                        </IntroText>\n                      </>\n                    )}\n                  </PredictionResultContainer>\n                </>\n              )\n          }\n          </>\n        )\n      }\n      {/* Bottom Buttons */}\n      <Portal>\n        {\n          !processing && (\n            <>\n              <IntroText>\n                <Trans i18nKey=\"predictionResult:resultModalDummy\">\n                  {/* eslint-disable-next-line max-len */}\n                  <strong>Aviso importante:</strong> Esta aplicación no predecirá su estado de COVID-19 ni diagnosticará ninguna enfermedad, trastorno u otra condición de salud. Virufy está llevando a cabo una investigación y utilizará la información que proporciones únicamente para dicha investigación. Virufy no sustituirá a un médico y le recuerda que es su responsabilidad buscar consejo médico de su médico.\n                </Trans>\n              </IntroText>\n              <WizardButtons\n                invert\n                leftLabel={t('predictionResult:nextButton')}\n                leftHandler={handleReturnMain}\n              />\n            </>\n          )\n        }\n        {submitError && (\n        <SubmitError>\n          {`${submitError}`}\n        </SubmitError>\n        )}\n      </Portal>\n    </>\n  );\n};\n\nexport default React.memo(PredictionResult);\n"]},"metadata":{},"sourceType":"module"}