{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/arcsec/Documents/Virufy/virufy-demo.github.io/src/components/SetResult/SetResult.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { StyledSelector } from \"./style\"; // result :string in ['low', 'medium', 'high']\n// stored in localStorage (use PredictionResult.tsx)\n\nconst SetResult = () => {\n  _s();\n\n  const [result, setResult] = useState(\"negative\");\n  useEffect(() => {\n    const storedResult = localStorage.getItem(\"predictionResult\");\n\n    if (storedResult && (storedResult === \"negative\" || storedResult === \"unknown\" || storedResult === \"positive\")) {\n      setResult(storedResult);\n    }\n  }, []);\n\n  const handleChange = event => {\n    const selectedValue = event.target.value;\n    setResult(selectedValue);\n    localStorage.setItem(\"predictionResult\", selectedValue);\n    console.log(`Selected result: ${selectedValue}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"result\",\n      style: {\n        marginRight: \"8px\"\n      },\n      children: \"Select Result :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledSelector, {\n      id: \"result\",\n      value: result,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"negative\",\n        children: \"Negative\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"unknown\",\n        children: \"Unknown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"positive\",\n        children: \"Positive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SetResult, \"QEg1LFJlpVktLmnV2mxDb3DL2dw=\");\n\n_c = SetResult;\nexport default SetResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetResult\");","map":{"version":3,"sources":["/Users/arcsec/Documents/Virufy/virufy-demo.github.io/src/components/SetResult/SetResult.tsx"],"names":["useState","useEffect","StyledSelector","SetResult","result","setResult","storedResult","localStorage","getItem","handleChange","event","selectedValue","target","value","setItem","console","log","marginRight"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,SAA/B,C,CAEA;AACA;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAS,UAAT,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAArB;;AACA,QACEF,YAAY,KACXA,YAAY,KAAK,UAAjB,IACCA,YAAY,KAAK,SADlB,IAECA,YAAY,KAAK,UAHP,CADd,EAKE;AACAD,MAAAA,SAAS,CAACC,YAAD,CAAT;AACD;AACF,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMG,YAAY,GAAIC,KAAD,IAAiD;AACpE,UAAMC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAnC;AACAR,IAAAA,SAAS,CAACM,aAAD,CAAT;AACAJ,IAAAA,YAAY,CAACO,OAAb,CAAqB,kBAArB,EAAyCH,aAAzC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBL,aAAc,EAA9C;AACD,GALD;;AAOA,sBACE;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,QAAf;AAAwB,MAAA,KAAK,EAAE;AAAEM,QAAAA,WAAW,EAAE;AAAf,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,cAAD;AAAgB,MAAA,EAAE,EAAC,QAAnB;AAA4B,MAAA,KAAK,EAAEb,MAAnC;AAA2C,MAAA,QAAQ,EAAEK,YAArD;AAAA,8BACE;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAlCD;;GAAMN,S;;KAAAA,S;AAoCN,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { StyledSelector } from \"./style\";\n\n// result :string in ['low', 'medium', 'high']\n// stored in localStorage (use PredictionResult.tsx)\nconst SetResult = () => {\n  const [result, setResult] = useState<string>(\"negative\");\n\n  useEffect(() => {\n    const storedResult = localStorage.getItem(\"predictionResult\");\n    if (\n      storedResult &&\n      (storedResult === \"negative\" ||\n        storedResult === \"unknown\" ||\n        storedResult === \"positive\")\n    ) {\n      setResult(storedResult);\n    }\n  }, []);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedValue = event.target.value;\n    setResult(selectedValue);\n    localStorage.setItem(\"predictionResult\", selectedValue);\n    console.log(`Selected result: ${selectedValue}`);\n  };\n\n  return (\n    <div>\n      <label htmlFor=\"result\" style={{ marginRight: \"8px\" }}>\n        Select Result :\n      </label>\n      <StyledSelector id=\"result\" value={result} onChange={handleChange}>\n        <option value=\"negative\">Negative</option>\n        <option value=\"unknown\">Unknown</option>\n        <option value=\"positive\">Positive</option>\n      </StyledSelector>\n    </div>\n  );\n};\n\nexport default SetResult;\n"]},"metadata":{},"sourceType":"module"}