{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable func-names */\nimport React from 'react';\n\nconst usePWAHelpers = buttonId => {\n  _s();\n\n  const deferredInstallPromptRef = React.useRef(null);\n  const [isInstalled, setIsInstalled] = React.useState(null);\n  React.useEffect(() => {\n    // BeforeInstallPrompt\n    const beforeInstallPromptFn = function (e) {\n      e.preventDefault();\n      deferredInstallPromptRef.current = e;\n      const installButton = document.getElementById(buttonId);\n\n      if (installButton) {\n        installButton.addEventListener('click', () => {\n          e.prompt();\n        });\n      }\n    };\n\n    window.addEventListener('beforeinstallprompt', beforeInstallPromptFn); // App Installed\n\n    const appInstalledFn = () => {\n      setIsInstalled(true);\n    };\n\n    window.addEventListener('appinstalled', appInstalledFn);\n    return () => {\n      window.removeEventListener('beforeinstallprompt', beforeInstallPromptFn);\n      window.removeEventListener('appinstalled', appInstalledFn);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(() => {\n    const isStandalone = window.matchMedia('(display-mode: standalone)').matches || window.navigator.standalone;\n\n    if (isStandalone) {\n      setIsInstalled(true);\n    } else if (window.navigator.getInstalledRelatedApps) {\n      window.navigator.getInstalledRelatedApps().then(r => {\n        if (r) {\n          setIsInstalled(r.length > 0);\n        }\n      });\n    }\n  }, []);\n  const handlePrompt = React.useCallback(() => {\n    if (deferredInstallPromptRef.current) {\n      return deferredInstallPromptRef.current.userChoice;\n    }\n\n    return undefined; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [deferredInstallPromptRef.current]);\n  return {\n    isInstalled,\n    setIsInstalled,\n    handlePrompt\n  };\n};\n\n_s(usePWAHelpers, \"O4oW4464jLIkLyEgrTAAKUmyzEE=\");\n\nexport default usePWAHelpers;","map":{"version":3,"sources":["/home/amil/virufy-demo.github.io/src/hooks/usePWAHelpers.ts"],"names":["React","usePWAHelpers","buttonId","deferredInstallPromptRef","useRef","isInstalled","setIsInstalled","useState","useEffect","beforeInstallPromptFn","e","preventDefault","current","installButton","document","getElementById","addEventListener","prompt","window","appInstalledFn","removeEventListener","isStandalone","matchMedia","matches","navigator","standalone","getInstalledRelatedApps","then","r","length","handlePrompt","useCallback","userChoice","undefined"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAkBA,MAAMC,aAAa,GAAIC,QAAD,IAAsB;AAAA;;AAC1C,QAAMC,wBAAwB,GAAGH,KAAK,CAACI,MAAN,CAA8C,IAA9C,CAAjC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,KAAK,CAACO,QAAN,CAA+B,IAA/B,CAAtC;AAEAP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpB;AACA,UAAMC,qBAAqB,GAAG,UAAUC,CAAV,EAAuC;AACnEA,MAAAA,CAAC,CAACC,cAAF;AACAR,MAAAA,wBAAwB,CAACS,OAAzB,GAAmCF,CAAnC;AAEA,YAAMG,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwBb,QAAxB,CAAtB;;AACA,UAAIW,aAAJ,EAAmB;AACjBA,QAAAA,aAAa,CAACG,gBAAd,CAA+B,OAA/B,EAAwC,MAAM;AAC5CN,UAAAA,CAAC,CAACO,MAAF;AACD,SAFD;AAGD;AACF,KAVD;;AAWAC,IAAAA,MAAM,CAACF,gBAAP,CAAwB,qBAAxB,EAA+CP,qBAA/C,EAboB,CAepB;;AACA,UAAMU,cAAc,GAAG,MAAM;AAC3Bb,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAFD;;AAGAY,IAAAA,MAAM,CAACF,gBAAP,CAAwB,cAAxB,EAAwCG,cAAxC;AAEA,WAAO,MAAM;AACXD,MAAAA,MAAM,CAACE,mBAAP,CAA2B,qBAA3B,EAAkDX,qBAAlD;AACAS,MAAAA,MAAM,CAACE,mBAAP,CAA2B,cAA3B,EAA2CD,cAA3C;AACD,KAHD,CArBoB,CAyBpB;AACD,GA1BD,EA0BG,EA1BH;AA4BAnB,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpB,UAAMa,YAAY,GAAGH,MAAM,CAACI,UAAP,CAAkB,4BAAlB,EAAgDC,OAAhD,IAA2DL,MAAM,CAACM,SAAP,CAAiBC,UAAjG;;AACA,QAAIJ,YAAJ,EAAkB;AAChBf,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAFD,MAEO,IAAIY,MAAM,CAACM,SAAP,CAAiBE,uBAArB,EAA8C;AACnDR,MAAAA,MAAM,CAACM,SAAP,CAAiBE,uBAAjB,GAA2CC,IAA3C,CAAgDC,CAAC,IAAI;AACnD,YAAIA,CAAJ,EAAO;AACLtB,UAAAA,cAAc,CAACsB,CAAC,CAACC,MAAF,GAAW,CAAZ,CAAd;AACD;AACF,OAJD;AAKD;AACF,GAXD,EAWG,EAXH;AAaA,QAAMC,YAAY,GAAG9B,KAAK,CAAC+B,WAAN,CAAkB,MAAM;AAC3C,QAAI5B,wBAAwB,CAACS,OAA7B,EAAsC;AACpC,aAAOT,wBAAwB,CAACS,OAAzB,CAAiCoB,UAAxC;AACD;;AACD,WAAOC,SAAP,CAJ2C,CAK7C;AACC,GANoB,EAMlB,CAAC9B,wBAAwB,CAACS,OAA1B,CANkB,CAArB;AAQA,SAAO;AACLP,IAAAA,WADK;AAELC,IAAAA,cAFK;AAGLwB,IAAAA;AAHK,GAAP;AAKD,CA1DD;;GAAM7B,a;;AA4DN,eAAeA,aAAf","sourcesContent":["/* eslint-disable func-names */\nimport React from 'react';\n\ninterface BeforeInstallPromptEvent extends Event {\n  prompt: () => void;\n  userChoice: Promise<string>;\n}\n\ndeclare global {\n\n  interface App {\n    id: string;\n  }\n  interface Navigator {\n    standalone?: boolean; // Available on Apple's iOS Safari only.\n    getInstalledRelatedApps?: () => Promise<App[] | null>; // Available on chrome only\n  }\n}\n\nconst usePWAHelpers = (buttonId: string) => {\n  const deferredInstallPromptRef = React.useRef<BeforeInstallPromptEvent | null>(null);\n  const [isInstalled, setIsInstalled] = React.useState<boolean | null>(null);\n\n  React.useEffect(() => {\n    // BeforeInstallPrompt\n    const beforeInstallPromptFn = function (e: BeforeInstallPromptEvent) {\n      e.preventDefault();\n      deferredInstallPromptRef.current = e;\n\n      const installButton = document.getElementById(buttonId);\n      if (installButton) {\n        installButton.addEventListener('click', () => {\n          e.prompt();\n        });\n      }\n    };\n    window.addEventListener('beforeinstallprompt', beforeInstallPromptFn as EventListener);\n\n    // App Installed\n    const appInstalledFn = () => {\n      setIsInstalled(true);\n    };\n    window.addEventListener('appinstalled', appInstalledFn as EventListener);\n\n    return () => {\n      window.removeEventListener('beforeinstallprompt', beforeInstallPromptFn as EventListener);\n      window.removeEventListener('appinstalled', appInstalledFn as EventListener);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    const isStandalone = window.matchMedia('(display-mode: standalone)').matches || window.navigator.standalone;\n    if (isStandalone) {\n      setIsInstalled(true);\n    } else if (window.navigator.getInstalledRelatedApps) {\n      window.navigator.getInstalledRelatedApps().then(r => {\n        if (r) {\n          setIsInstalled(r.length > 0);\n        }\n      });\n    }\n  }, []);\n\n  const handlePrompt = React.useCallback(() => {\n    if (deferredInstallPromptRef.current) {\n      return deferredInstallPromptRef.current.userChoice;\n    }\n    return undefined;\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [deferredInstallPromptRef.current]);\n\n  return {\n    isInstalled,\n    setIsInstalled,\n    handlePrompt,\n  };\n};\n\nexport default usePWAHelpers;\n"]},"metadata":{},"sourceType":"module"}