{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/arcsec/Documents/Virufy/virufy-demo.github.io/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport loadable from '@loadable/component';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './i18n'; // Utils\n\nimport swConfig from 'utils/swConfig';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'; // import reportWebVitals from './reportWebVitals';\n\nconst StartApp = loadable(_c = () => import('./start'), {\n  fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 13\n  }, this)\n});\n_c2 = StartApp;\nReactDOM.render( /*#__PURE__*/_jsxDEV(StartApp, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n\nif (process.env.NODE_ENV !== 'production') {\n  serviceWorkerRegistration.unregister();\n} else {\n  serviceWorkerRegistration.register(swConfig);\n} // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StartApp$loadable\");\n$RefreshReg$(_c2, \"StartApp\");","map":{"version":3,"sources":["/Users/arcsec/Documents/Virufy/virufy-demo.github.io/src/index.tsx"],"names":["React","ReactDOM","loadable","swConfig","serviceWorkerRegistration","StartApp","fallback","render","document","getElementById","process","env","NODE_ENV","unregister","register"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,OAAO,4CAAP;AACA,OAAO,QAAP,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,OAAO,KAAKC,yBAAZ,MAA2C,6BAA3C,C,CACA;;AAEA,MAAMC,QAAQ,GAAGH,QAAQ,MAAC,MAAM,OAAO,SAAP,CAAP,EAA0B;AACjDI,EAAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADuC,CAA1B,CAAzB;MAAMD,Q;AAINJ,QAAQ,CAACM,MAAT,eACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF,E,CAKA;AACA;AACA;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCR,EAAAA,yBAAyB,CAACS,UAA1B;AACD,CAFD,MAEO;AACLT,EAAAA,yBAAyB,CAACU,QAA1B,CAAmCX,QAAnC;AACD,C,CAED;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport loadable from '@loadable/component';\n\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './i18n';\n\n// Utils\nimport swConfig from 'utils/swConfig';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n// import reportWebVitals from './reportWebVitals';\n\nconst StartApp = loadable(() => import('./start'), {\n  fallback: <div>Loading</div>,\n});\n\nReactDOM.render(\n  <StartApp />,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nif (process.env.NODE_ENV !== 'production') {\n  serviceWorkerRegistration.unregister();\n} else {\n  serviceWorkerRegistration.register(swConfig);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"]},"metadata":{},"sourceType":"module"}