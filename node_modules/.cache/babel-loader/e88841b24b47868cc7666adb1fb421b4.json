{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/arcsec/Documents/Virufy/virufy-demo.github.io/src/containers/Welcome/Welcome.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { createStore } from 'little-state-machine';\nimport { useLocation, useRouteMatch } from 'react-router-dom'; // Wizard\n\nimport Wizard from 'components/Wizard';\nimport DotIndicators from 'components/DotIndicators';\nconst StoreKey = 'welcome';\ncreateStore({\n  [StoreKey]: {}\n}, {\n  name: 'VirufyWizard',\n  middleWares: [],\n  storageType: window.localStorage\n});\nconst baseUrl = '/welcome';\nconst stepsWithoutDots = [{\n  path: '/',\n  componentPath: 'Welcome/Step2',\n  props: {\n    storeKey: StoreKey,\n    previousStep: `${baseUrl}`,\n    nextStep: `${baseUrl}/step-3`\n  }\n}];\nconst steps = [{\n  path: '/step-3',\n  componentPath: 'Welcome/Step3',\n  props: {\n    storeKey: StoreKey,\n    previousStep: `${baseUrl}/step-2`,\n    nextStep: '/submit-steps/step-record/cough'\n  }\n}];\n\nconst Welcome = () => {\n  _s();\n\n  // Hooks\n  const location = useLocation();\n  const match = useRouteMatch();\n  const url = location.pathname.replace(match.url, '');\n  const active = steps.findIndex(step => step.path === url);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"welcome\",\n    children: [\"aaa\", /*#__PURE__*/_jsxDEV(Wizard, {\n      steps: [...stepsWithoutDots, ...steps],\n      children: active >= 0 && /*#__PURE__*/_jsxDEV(DotIndicators, {\n        current: active,\n        total: steps.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Welcome, \"xEHbEsD2qwnMf5PXmgJOlBe+qIg=\", false, function () {\n  return [useLocation, useRouteMatch];\n});\n\n_c = Welcome;\nexport default _c2 = /*#__PURE__*/React.memo(Welcome);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Welcome\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/arcsec/Documents/Virufy/virufy-demo.github.io/src/containers/Welcome/Welcome.tsx"],"names":["React","createStore","useLocation","useRouteMatch","Wizard","DotIndicators","StoreKey","name","middleWares","storageType","window","localStorage","baseUrl","stepsWithoutDots","path","componentPath","props","storeKey","previousStep","nextStep","steps","Welcome","location","match","url","pathname","replace","active","findIndex","step","length","memo"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,kBAA3C,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AAEA,MAAMC,QAAQ,GAAG,SAAjB;AAEAL,WAAW,CAAC;AACV,GAACK,QAAD,GAAY;AADF,CAAD,EAER;AACDC,EAAAA,IAAI,EAAE,cADL;AAEDC,EAAAA,WAAW,EAAE,EAFZ;AAGDC,EAAAA,WAAW,EAAEC,MAAM,CAACC;AAHnB,CAFQ,CAAX;AAQA,MAAMC,OAAO,GAAG,UAAhB;AAEA,MAAMC,gBAA+B,GAAG,CACtC;AACEC,EAAAA,IAAI,EAAE,GADR;AAEEC,EAAAA,aAAa,EAAE,eAFjB;AAGEC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAEX,QADL;AAELY,IAAAA,YAAY,EAAG,GAAEN,OAAQ,EAFpB;AAGLO,IAAAA,QAAQ,EAAG,GAAEP,OAAQ;AAHhB;AAHT,CADsC,CAAxC;AAYA,MAAMQ,KAAoB,GAAG,CAC3B;AACEN,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,aAAa,EAAE,eAFjB;AAGEC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAEX,QADL;AAELY,IAAAA,YAAY,EAAG,GAAEN,OAAQ,SAFpB;AAGLO,IAAAA,QAAQ,EAAE;AAHL;AAHT,CAD2B,CAA7B;;AAYA,MAAME,OAAO,GAAG,MAAM;AAAA;;AACpB;AACA,QAAMC,QAAQ,GAAGpB,WAAW,EAA5B;AACA,QAAMqB,KAAK,GAAGpB,aAAa,EAA3B;AAEA,QAAMqB,GAAG,GAAGF,QAAQ,CAACG,QAAT,CAAkBC,OAAlB,CAA0BH,KAAK,CAACC,GAAhC,EAAqC,EAArC,CAAZ;AACA,QAAMG,MAAM,GAAGP,KAAK,CAACQ,SAAN,CAAgBC,IAAI,IAAIA,IAAI,CAACf,IAAL,KAAcU,GAAtC,CAAf;AAEA,sBACA;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,mCACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAE,CAAC,GAAGX,gBAAJ,EAAsB,GAAGO,KAAzB,CADT;AAAA,gBAGGO,MAAM,IAAI,CAAV,iBACC,QAAC,aAAD;AACE,QAAA,OAAO,EAAEA,MADX;AAEE,QAAA,KAAK,EAAEP,KAAK,CAACU;AAFf;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAeD,CAvBD;;GAAMT,O;UAEanB,W,EACHC,a;;;KAHVkB,O;AAyBN,kCAAerB,KAAK,CAAC+B,IAAN,CAAWV,OAAX,CAAf","sourcesContent":["import React from 'react';\nimport { createStore } from 'little-state-machine';\nimport { useLocation, useRouteMatch } from 'react-router-dom';\n\n// Wizard\nimport Wizard from 'components/Wizard';\nimport DotIndicators from 'components/DotIndicators';\n\nconst StoreKey = 'welcome';\n\ncreateStore({\n  [StoreKey]: {},\n}, {\n  name: 'VirufyWizard',\n  middleWares: [],\n  storageType: window.localStorage,\n});\n\nconst baseUrl = '/welcome';\n\nconst stepsWithoutDots: Wizard.Step[] = [\n  {\n    path: '/',\n    componentPath: 'Welcome/Step2',\n    props: {\n      storeKey: StoreKey,\n      previousStep: `${baseUrl}`,\n      nextStep: `${baseUrl}/step-3`,\n    },\n  },\n];\n\nconst steps: Wizard.Step[] = [\n  {\n    path: '/step-3',\n    componentPath: 'Welcome/Step3',\n    props: {\n      storeKey: StoreKey,\n      previousStep: `${baseUrl}/step-2`,\n      nextStep: '/submit-steps/step-record/cough',\n    },\n  },\n];\n\nconst Welcome = () => {\n  // Hooks\n  const location = useLocation();\n  const match = useRouteMatch();\n\n  const url = location.pathname.replace(match.url, '');\n  const active = steps.findIndex(step => step.path === url);\n\n  return (\n\t\t<div className=\"welcome\">aaa\n    <Wizard\n      steps={[...stepsWithoutDots, ...steps]}\n    >\n      {active >= 0 && (\n        <DotIndicators\n          current={active}\n          total={steps.length}\n        />\n      )}\n    </Wizard>\n\n  </div>\n  );\n};\n\nexport default React.memo(Welcome);\n"]},"metadata":{},"sourceType":"module"}