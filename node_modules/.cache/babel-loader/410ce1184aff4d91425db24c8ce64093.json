{"ast":null,"code":"/* eslint-disable no-plusplus */ /* eslint-disable no-param-reassign */var sizeAsHuman=function sizeAsHuman(bytes,si){var thresh=si?1000:1024;if(Math.abs(bytes)<thresh){return\"\".concat(bytes,\" B\");}var units=si?['kB','MB','GB','TB','PB','EB','ZB','YB']:['KiB','MiB','GiB','TiB','PiB','EiB','ZiB','YiB'];var u=-1;do{bytes/=thresh;++u;}while(Math.abs(bytes)>=thresh&&u<units.length-1);return\"\".concat(bytes.toFixed(1),\" \").concat(units[u]);};var blobToFile=function blobToFile(theBlob,fileName){var b=theBlob;// A Blob() is almost a File() - it's just missing the two properties below which we will add\nb.lastModifiedDate=new Date();b.name=fileName;// Cast to a File() type\nreturn theBlob;};export default{sizeAsHuman:sizeAsHuman,blobToFile:blobToFile};","map":{"version":3,"sources":["/home/amil/virufy-demo.github.io/src/helper/fileHelper.ts"],"names":["sizeAsHuman","bytes","si","thresh","Math","abs","units","u","length","toFixed","blobToFile","theBlob","fileName","b","lastModifiedDate","Date","name"],"mappings":"AAAA,gC,CACA,sCAEA,GAAMA,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAgBC,EAAhB,CAAiC,CACnD,GAAMC,CAAAA,MAAM,CAAGD,EAAE,CAAG,IAAH,CAAU,IAA3B,CACA,GAAIE,IAAI,CAACC,GAAL,CAASJ,KAAT,EAAkBE,MAAtB,CAA8B,CAC5B,gBAAUF,KAAV,OACD,CACD,GAAMK,CAAAA,KAAK,CAAGJ,EAAE,CACZ,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyB,IAAzB,CAA+B,IAA/B,CAAqC,IAArC,CAA2C,IAA3C,CADY,CAEZ,CAAC,KAAD,CAAQ,KAAR,CAAe,KAAf,CAAsB,KAAtB,CAA6B,KAA7B,CAAoC,KAApC,CAA2C,KAA3C,CAAkD,KAAlD,CAFJ,CAGA,GAAIK,CAAAA,CAAC,CAAG,CAAC,CAAT,CACA,EAAG,CACDN,KAAK,EAAIE,MAAT,CACA,EAAEI,CAAF,CACD,CAHD,MAGSH,IAAI,CAACC,GAAL,CAASJ,KAAT,GAAmBE,MAAnB,EAA6BI,CAAC,CAAGD,KAAK,CAACE,MAAN,CAAe,CAHzD,EAIA,gBAAUP,KAAK,CAACQ,OAAN,CAAc,CAAd,CAAV,aAA8BH,KAAK,CAACC,CAAD,CAAnC,EACD,CAdD,CAgBA,GAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,OAAD,CAAgBC,QAAhB,CAA0C,CAC3D,GAAMC,CAAAA,CAAM,CAAGF,OAAf,CACA;AACAE,CAAC,CAACC,gBAAF,CAAqB,GAAIC,CAAAA,IAAJ,EAArB,CACAF,CAAC,CAACG,IAAF,CAASJ,QAAT,CAEA;AACA,MAAOD,CAAAA,OAAP,CACD,CARD,CAUA,cAAe,CACbX,WAAW,CAAXA,WADa,CAEbU,UAAU,CAAVA,UAFa,CAAf","sourcesContent":["/* eslint-disable no-plusplus */\n/* eslint-disable no-param-reassign */\n\nconst sizeAsHuman = (bytes: number, si?: boolean) => {\n  const thresh = si ? 1000 : 1024;\n  if (Math.abs(bytes) < thresh) {\n    return `${bytes} B`;\n  }\n  const units = si\n    ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n    : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n  let u = -1;\n  do {\n    bytes /= thresh;\n    ++u;\n  } while (Math.abs(bytes) >= thresh && u < units.length - 1);\n  return `${bytes.toFixed(1)} ${units[u]}`;\n};\n\nconst blobToFile = (theBlob: Blob, fileName:string): File => {\n  const b: any = theBlob;\n  // A Blob() is almost a File() - it's just missing the two properties below which we will add\n  b.lastModifiedDate = new Date();\n  b.name = fileName;\n\n  // Cast to a File() type\n  return theBlob as File;\n};\n\nexport default {\n  sizeAsHuman,\n  blobToFile,\n};\n"]},"metadata":{},"sourceType":"module"}