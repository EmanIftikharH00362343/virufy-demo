{"ast":null,"code":"import { jsx, css } from '@emotion/react';\nimport { useMemo, useRef, useEffect, cloneElement, Children, createElement, useState, useCallback } from 'react';\nimport t from 'prop-types';\nimport { Switch } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  display: grid;\\n  .item {\\n    grid-area: 1 / 1 / 2 / 2;\\n  }\\n  .item:not(:only-child) {\\n    &.\", \"-enter-active, &.\", \"-exit-active {\\n      transition: transform \", \"ms \", \";\\n    }\\n  }\\n\\n  &.slide {\\n    overflow: hidden;\\n\\n    // back\\n    .back-enter {\\n      transform: translateX(-100%);\\n    }\\n    .back-enter-active {\\n      transform: translateX(0);\\n    }\\n    .back-exit {\\n      transform: translateX(0);\\n    }\\n    .back-exit-active {\\n      transform: translate(100%);\\n    }\\n\\n    // next\\n    .next-enter {\\n      transform: translateX(100%);\\n    }\\n    .next-enter-active {\\n      transform: translateX(0);\\n    }\\n    .next-exit {\\n      transform: translateX(0);\\n    }\\n    .next-exit-active {\\n      transform: translateX(-100%);\\n    }\\n  }\\n  &.rotate {\\n    perspective: 2000px;\\n\\n    .item {\\n      backface-visibility: hidden;\\n    }\\n\\n    // back\\n    .back-enter {\\n      transform: rotateY(-180deg);\\n    }\\n    .back-enter-active {\\n      transform: rotateY(0);\\n    }\\n    .back-exit {\\n      transform: rotateY(0);\\n    }\\n    .back-exit-active {\\n      transform: rotateY(180deg);\\n    }\\n\\n    // next\\n    .next-enter {\\n      transform: rotateY(180deg);\\n    }\\n    .next-enter-active {\\n      transform: rotateY(0);\\n    }\\n    .next-exit {\\n      transform: rotateY(0);\\n    }\\n    .next-exit-active {\\n      transform: rotateY(-180deg);\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * save\n */\n\n\nvar save = function save(key, init) {\n  var getRaw = function getRaw() {\n    return sessionStorage.getItem(key);\n  };\n\n  var set = function set(val) {\n    return sessionStorage.setItem(key, JSON.stringify(val));\n  };\n\n  var remove = function remove() {\n    return sessionStorage.removeItem(key);\n  };\n\n  if (init !== undefined && getRaw() === null) set(init);\n\n  var getVal = function getVal() {\n    return JSON.parse(getRaw());\n  };\n\n  var setVal = function setVal(val) {\n    return val === undefined ? remove() : set(val);\n  };\n\n  return [getVal, setVal];\n};\n/**\n * useSave\n */\n\n\nvar useSave = function useSave(key, initVal) {\n  var initRef = useRef(initVal);\n\n  var _useMemo = useMemo(function () {\n    return save(key, initRef.current);\n  }, [key]),\n      getVal = _useMemo[0],\n      setVal = _useMemo[1];\n\n  var _useState = useState(getVal()),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var set = useCallback(function (val) {\n    setVal(val);\n    setState(val);\n  }, [setVal]);\n  return [state, set];\n};\n/**\n * styles\n */\n\n\nvar getCSS = function getCSS(duration, timing, direction) {\n  return css(_templateObject(), direction, direction, duration, timing);\n};\n/**\n * SlideRoutes\n */\n\n\nvar SlideRoutes = function SlideRoutes(_ref) {\n  var location = _ref.location,\n      animation = _ref.animation,\n      pathList = _ref.pathList,\n      duration = _ref.duration,\n      timing = _ref.timing,\n      destroy = _ref.destroy,\n      children = _ref.children;\n\n  var _useSave = useSave('::slide::history::', []),\n      historyList = _useSave[0],\n      setHistoryList = _useSave[1];\n\n  var hasPathList = useMemo(function () {\n    var has = (pathList == null ? void 0 : pathList.length) > 0;\n    if (has && historyList) setHistoryList(undefined);\n    return has;\n  }, [historyList, pathList, setHistoryList]);\n  var pathname = location.pathname;\n  var prevPath = useRef(hasPathList ? pathname : historyList == null ? void 0 : historyList[0]);\n  var move = useRef('');\n\n  if (prevPath.current !== pathname) {\n    if (hasPathList) {\n      var prevIndex = pathList.indexOf(prevPath.current);\n      var nextIndex = pathList.indexOf(pathname);\n\n      if (nextIndex > prevIndex) {\n        move.current = 'next';\n      } else {\n        move.current = 'back';\n      }\n    } else {\n      var _nextIndex = historyList.lastIndexOf(pathname);\n\n      if (_nextIndex === -1) {\n        move.current = 'next';\n        historyList.push(pathname);\n      } else {\n        move.current = 'back';\n        historyList.length = _nextIndex + 1;\n      }\n\n      setHistoryList([].concat(historyList));\n    }\n\n    prevPath.current = pathname;\n  }\n\n  useEffect(function () {\n    return function () {\n      setHistoryList(undefined);\n    };\n  }, [setHistoryList]);\n  var direction = move.current;\n  var CSSProps = destroy ? {\n    timeout: duration\n  } : {\n    addEndListener: function addEndListener() {}\n  };\n  return jsx(TransitionGroup, {\n    className: \"slide-routes \" + animation,\n    childFactory: function childFactory(child) {\n      return /*#__PURE__*/cloneElement(child, {\n        classNames: direction\n      });\n    },\n    css: getCSS(duration, timing, direction)\n  }, jsx(CSSTransition, Object.assign({\n    key: pathname\n  }, CSSProps), jsx(Switch, {\n    location: location\n  }, Children.map(children, function (child) {\n    if (!child) return child;\n\n    var _child$props = child.props,\n        render = _child$props.render,\n        component = _child$props.component,\n        restProps = _objectWithoutPropertiesLoose(_child$props, [\"render\", \"component\"]);\n\n    var element = render ? render() : /*#__PURE__*/createElement(component);\n    if (element.props.replace === true) return child;\n\n    var newRender = function newRender() {\n      return jsx(\"div\", {\n        className: \"item\"\n      }, element);\n    };\n\n    return _extends({}, child, {\n      props: _extends({}, restProps, {\n        render: newRender\n      })\n    });\n  }))));\n};\n\nSlideRoutes.defaultProps = {\n  animation: 'slide',\n  duration: 200,\n  timing: 'ease',\n  destroy: true\n};\nSlideRoutes.propTypes = {\n  location: t.object.isRequired,\n  animation: t.oneOf(['slide', 'rotate']),\n  pathList: t.array,\n  duration: t.number,\n  timing: t.oneOf(['ease', 'ease-in', 'ease-out', 'ease-in-out', 'linear']),\n  destroy: t.bool,\n  children: t.node\n};\nexport default SlideRoutes;","map":null,"metadata":{},"sourceType":"module"}